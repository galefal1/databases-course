use imdb_ijs;

drop table if exists movies_recommendations;

create table movies_recommendations
(base_movie_id int
, recommended_movie_id int
, recommendation int 
, suggested_by varchar(255)
, justification varchar(255) not null
, comment varchar(255)
, PRIMARY KEY (base_movie_id, recommended_movie_id, suggested_by)
, CONSTRAINT CHK_recommendation CHECK (recommendation >=1 AND 10 >= recommendation)
, FOREIGN KEY (base_movie_id) REFERENCES movies(Id)
, FOREIGN KEY (recommended_movie_id) REFERENCES movies(Id)
);

# into bond_classification.csv
Select distinct movie_id, name
from 
roles as r
join
movies as m
on
r.movie_id = m.id
where
role = 'James Bond'
;

insert into movies_recommendations
with
real_bond as (select 130945 as movie_id
union select 335337
union select 368419
union select 86263
union select 335336
union select 368418
union select 85871
union select 92573
union select 120574
union select 130953
union select 332065
union select 372233
union select 189403
union select 192702
union select 240521
union select 117314
union select 192514
union select 203649
union select 218808
union select 312170
union select 354178
)
Select b.movie_id, r.movie_id, 9, 'Idan', 'Both Bond movies', null
from
real_bond as b
, real_bond as r
where
b.movie_id != r.movie_id
;


insert into movies_recommendations
with
real_bond as (select 130945 as movie_id
union select 335337
union select 368419
union select 86263
union select 335336
union select 368418
union select 85871
union select 92573
union select 120574
union select 130953
union select 332065
union select 372233
union select 189403
union select 192702
union select 240521
union select 117314
union select 192514
union select 203649
union select 218808
union select 312170
union select 354178
)
, fake_bond as (select 21756 as movie_id
union select 531
union select 530
union select 74724
union select 91948
union select 160295
union select 165260
union select 175469
union select 223076
union select 234188
union select 165261
union select 160315
union select 230394
union select 160424
union select 130947
union select 130949
union select 160293
union select 160319
union select 168469
union select 140431
union select 76256
union select 245547
union select 123256
union select 66192
)
Select b.movie_id, r.movie_id, 3, 'Idan', 'People that like Bond do not like its fakes', null
from
real_bond as b
, fake_bond as r
where
b.movie_id != r.movie_id
;

# Recommendation by person
select 
suggested_by
, count(*) as recommendations
, sum(if(recommendation>5,1,0)) as positive_recommendations
, sum(if(recommendation<=5,1,0))  as negative_recommendations
, sum(if(recommendation>5,1,0)) >= 100 and sum(if(recommendation<=5,1,0)) >=100 as completed
from
movies_recommendations
group by 
suggested_by
order by completed desc, suggested_by
;

drop table if exists movies_recommendations_agg;

create table movies_recommendations_agg
as
select
base_movie_id 
, recommended_movie_id 
, avg(recommendation) as recommendation
, stddev(recommendation) as recommendation_std
, count(distinct suggested_by) as suggested_by_num
, count(distinct justification) as justifications_num
from
movies_recommendations
group by
base_movie_id 
, recommended_movie_id 
;
